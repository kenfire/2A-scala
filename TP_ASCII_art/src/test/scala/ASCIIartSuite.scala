import org.junit.runner.RunWith
import org.scalatest.FunSuite
import org.scalatest.junit.JUnitRunner

@RunWith(classOf[JUnitRunner])
class ASCIIartSuite extends  FunSuite{


  trait artData{
    val a1 = new ASCIIart("type1.txt")
    val a2 = new ASCIIart("type2.txt")
  }

  test("Lecture et taille ok"){
    new artData {
      assert(a1.largeur == 4)
      assert(a1.hauteur == 5)

      assert(a2.largeur == 20)
      assert(a2.hauteur ==11)
    }
  }

  test("Découpe des lettres - ok"){
    new artData {
      assert( a1.tableLettre('a') == List(" #  ","# # ","### ","# # ","# # ") )
      assert( a1.tableLettre('b') == List("##  ","# # ","##  ","# # ","##  ") )
      assert( a1.tableLettre('z') == List("### ","  # "," #  ","#   ","### ") )

      assert( a2.tableLettre('a') == List(" .----------------. ","| .--------------. |","| |      __      | |","| |     /  \\     | |","| |    / /\\ \\    | |","| |   / ____ \\   | |","| | _/ /    \\ \\_ | |","| ||____|  |____|| |","| |              | |","| '--------------' |"," '----------------' ") )
      assert( a2.tableLettre('b') == List(" .----------------. ","| .--------------. |","| |   ______     | |","| |  |_   _ \\    | |","| |    | |_) |   | |","| |    |  __'.   | |","| |   _| |__) |  | |","| |  |_______/   | |","| |              | |","| '--------------' |"," '----------------' ") )
      assert( a2.tableLettre('z') == List(" .----------------. ","| .--------------. |","| |   ________   | |","| |  |  __   _|  | |","| |  |_/  / /    | |","| |     .'.' _   | |","| |   _/ /__/ |  | |","| |  |________|  | |","| |              | |","| '--------------' |"," '----------------' ") )

    }
  }

  test("Découpe des lettres - KO") {
    new artData {
      assert( a1.tableLettre('1') == List("### ", "  # ", " ## ", "    ", " #  "))
      assert( a1.tableLettre('$') == List("### ", "  # ", " ## ", "    ", " #  "))

      assert( a2.tableLettre('1') == List(" .----------------. ", "| .--------------. |", "| |    ______    | |", "| |   / _ __ `.  | |", "| |  |_/____) |  | |", "| |    /  ___.'  | |", "| |    |_|       | |", "| |    (_)       | |", "| |              | |", "| '--------------' |", " '----------------' "))
      assert( a2.tableLettre('$') == List(" .----------------. ", "| .--------------. |", "| |    ______    | |", "| |   / _ __ `.  | |", "| |  |_/____) |  | |", "| |    /  ___.'  | |", "| |    |_|       | |", "| |    (_)       | |", "| |              | |", "| '--------------' |", " '----------------' "))
    }
  }





  test("Mot"){
    new artData {
      assert( a1("scala")  == " ##  ##  #  #    #  \n#   #   # # #   # # \n #  #   ### #   ### \n  # #   # # #   # # \n##   ## # # ### # # ")
      assert( a1("infoapp")  == "### ### ###  #   #  ##  ##  \n #  # # #   # # # # # # # # \n #  # # ##  # # ### ##  ##  \n #  # # #   # # # # #   #   \n### # # #    #  # # #   #   ")

      assert( a2("infoapp")  == " .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------.  .----------------. \n| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |\n| |     _____    | || | ____  _____  | || |  _________   | || |     ____     | || |      __      | || |   ______     | || |   ______     | |\n| |    |_   _|   | || ||_   \\|_   _| | || | |_   ___  |  | || |   .'    `.   | || |     /  \\     | || |  |_   __ \\   | || |  |_   __ \\   | |\n| |      | |     | || |  |   \\ | |   | || |   | |_  \\_|  | || |  /  .--.  \\  | || |    / /\\ \\    | || |    | |__) |  | || |    | |__) |  | |\n| |      | |     | || |  | |\\ \\| |   | || |   |  _|      | || |  | |    | |  | || |   / ____ \\   | || |    |  ___/   | || |    |  ___/   | |\n| |     _| |_    | || | _| |_\\   |_  | || |  _| |_       | || |  \\  `--'  /  | || | _/ /    \\ \\_ | || |   _| |_      | || |   _| |_      | |\n| |    |_____|   | || ||_____|\\____| | || | |_____|      | || |   `.____.'   | || ||____|  |____|| || |  |_____|     | || |  |_____|     | |\n| |              | || |              | || |              | || |              | || |              | || |              | || |              | |\n| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |\n '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' " )
    }
  }

}
